version: '3.8'

# Docker Compose for LOCAL DEVELOPMENT
# Uses pre-built JAR from target/ - FASTER builds!
# 
# Prerequisites:
#   1. Build JAR locally: mvn clean package -DskipTests
#   2. Then run: docker-compose -f docker-compose-local.yml up
#
# Or use the helper script:
#   ./scripts/build-local-docker.sh

services:
  # Main basket pricing service (using pre-built JAR)
  basket-pricing-service:
    build:
      context: .
      dockerfile: Dockerfile.local  # Uses pre-built JAR
    image: basket-pricing-service:dev
    container_name: basket-pricing-service-dev
    pull_policy: build
    ports:
      - "8080:8080"   # REST API
      - "9090:9090"   # gRPC
      - "8081:8081"   # Actuator/Management
    environment:
      # Spring profiles
      - SPRING_PROFILES_ACTIVE=default
      
      # Application settings
      - SERVER_PORT=8080
      - MANAGEMENT_SERVER_PORT=8081
      - GRPC_SERVER_PORT=9090
      
      # Refinitiv configuration (override with your credentials)
      - REFINITIV_HOST=${REFINITIV_HOST:-ads1}
      - REFINITIV_PORT=${REFINITIV_PORT:-14002}
      - REFINITIV_SERVICE_NAME=${REFINITIV_SERVICE_NAME:-ELEKTRON_DD}
      - REFINITIV_USERNAME=${REFINITIV_USERNAME:-user1}
      
      # Logging (more verbose for dev)
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_SRVISWAN=DEBUG
      - LOGGING_LEVEL_COM_SRVISWAN_BASKETPRICING_QUALITY=DEBUG
      
      # JVM options (smaller heap for dev)
      - JAVA_OPTS=-Xmx1g -Xms512m
      
    volumes:
      # Mount logs directory
      - ./logs:/app/logs
      # Hot reload config (optional)
      - ./src/main/resources/application.yaml:/app/config/application.yaml:ro
      
    networks:
      - basket-pricing-dev
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: basket-pricing-prometheus-dev
    pull_policy: missing
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus-minimal.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-dev-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'  # Less retention for dev
    networks:
      - basket-pricing-dev
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: basket-pricing-grafana-dev
    pull_policy: missing
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafana-dev-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - basket-pricing-dev
    restart: unless-stopped

networks:
  basket-pricing-dev:
    driver: bridge

volumes:
  prometheus-dev-data:
  grafana-dev-data:

